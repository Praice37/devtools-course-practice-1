#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_Can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_Can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Show_Help_Without_Arguments
    COMMAND ${APPLICATION}
)

set_tests_properties (${prefix}_Can_Show_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is a fibonacci heap application"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Check_Number_Of_Arguments
    COMMAND ${APPLICATION} 1 2
)
set_tests_properties (${prefix}_Check_Number_Of_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: There must be at least 4 arguments"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Detecting_Wrong_Operation_Format
    COMMAND ${APPLICATION} T 1 2 3
)
set_tests_properties (${prefix}_Can_Detecting_Wrong_Operation_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong operation format!"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Find_Min_In_Heap
    COMMAND ${APPLICATION} min 1 2 3
)
set_tests_properties (${prefix}_Can_Find_Min_In_Heap PROPERTIES
    PASS_REGULAR_EXPRESSION "Min = 2"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Find_Elem_For_Key_In_Heap
    COMMAND ${APPLICATION} find 1 1 2
)
set_tests_properties (${prefix}_Can_Find_Elem_For_Key_In_Heap PROPERTIES
    PASS_REGULAR_EXPRESSION "1 is found in heap"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Not_Find_Elem_For_Key_In_Heap
    COMMAND ${APPLICATION} find 1 2 3
)
set_tests_properties (${prefix}_Can_Not_Find_Elem_For_Key_In_Heap PROPERTIES
    PASS_REGULAR_EXPRESSION "1 not found in heap"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Merge_In_Heap
    COMMAND ${APPLICATION} merge 1 1 2
)
set_tests_properties (${prefix}_Can_Merge_In_Heap PROPERTIES
    PASS_REGULAR_EXPRESSION "Merge successfully"
    LABELS "${MODULE}")
